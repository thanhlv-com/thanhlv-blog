import{_ as i,c as n,o as a,b as s}from"./chunks/framework.4MfQJnRv.js";const e=JSON.parse('{"title":"Secondary Indexing","description":"Secondary Indexing là một tính năng trong Apache Cassandra cho phép bạn tạo các chỉ mục phụ trên các cột không phải là khóa chính, giúp tăng tốc độ truy vấn dữ liệu. Bài viết này sẽ giải thích chi tiết về Secondary Indexing, cách sử dụng và những ưu điểm cũng như nhược điểm của nó.","frontmatter":{"footer":true,"title":"Secondary Indexing","description":"Secondary Indexing là một tính năng trong Apache Cassandra cho phép bạn tạo các chỉ mục phụ trên các cột không phải là khóa chính, giúp tăng tốc độ truy vấn dữ liệu. Bài viết này sẽ giải thích chi tiết về Secondary Indexing, cách sử dụng và những ưu điểm cũng như nhược điểm của nó.","authors":["lethanh"],"date":"2025-05-27T00:00:00.000Z","outline":"deep","image":"https://static-cdn.thanhlv.com/study/thanhlv-study-2025/2025-03-26-what-is-apache-cassandra/cassandra-la-gi-1.webp","draft":false,"group":"1. Cassandra"},"headers":[{"level":2,"title":"1. Secondary Index là gì ?","slug":"_1-secondary-index-la-gi","link":"#_1-secondary-index-la-gi","children":[{"level":3,"title":"1.1 Ví dụ về Secondary Index trong Cassandra:","slug":"_1-1-vi-du-ve-secondary-index-trong-cassandra","link":"#_1-1-vi-du-ve-secondary-index-trong-cassandra","children":[{"level":4,"title":"Lưu ý:","slug":"luu-y","link":"#luu-y","children":[]}]},{"level":3,"title":"1.2 Cách Secondary Index hoạt động, tìm kiếm dữ liệu và lý do làm giảm hiệu suất","slug":"_1-2-cach-secondary-index-hoat-đong-tim-kiem-du-lieu-va-ly-do-lam-giam-hieu-suat","link":"#_1-2-cach-secondary-index-hoat-đong-tim-kiem-du-lieu-va-ly-do-lam-giam-hieu-suat","children":[{"level":4,"title":"1.2.1. Cách Secondary Index hoạt động trong Cassandra","slug":"_1-2-1-cach-secondary-index-hoat-đong-trong-cassandra","link":"#_1-2-1-cach-secondary-index-hoat-đong-trong-cassandra","children":[]},{"level":4,"title":"1.2.2 Vì sao Secondary Index trong Cassandra làm giảm hiệu suất?","slug":"_1-2-2-vi-sao-secondary-index-trong-cassandra-lam-giam-hieu-suat","link":"#_1-2-2-vi-sao-secondary-index-trong-cassandra-lam-giam-hieu-suat","children":[{"level":5,"title":"Những lý do chính khiến hiệu suất giảm bao gồm:","slug":"nhung-ly-do-chinh-khien-hieu-suat-giam-bao-gom","link":"#nhung-ly-do-chinh-khien-hieu-suat-giam-bao-gom","children":[]},{"level":5,"title":"Minh họa chi tiết về vấn đề hiệu suất .","slug":"minh-hoa-chi-tiet-ve-van-đe-hieu-suat","link":"#minh-hoa-chi-tiet-ve-van-đe-hieu-suat","children":[]}]}]},{"level":3,"title":"1.3 Khi nào nên dùng Secondary Index?","slug":"_1-3-khi-nao-nen-dung-secondary-index","link":"#_1-3-khi-nao-nen-dung-secondary-index","children":[]},{"level":3,"title":"Khi nào không nên sử dụng Secondary Index?","slug":"khi-nao-khong-nen-su-dung-secondary-index","link":"#khi-nao-khong-nen-su-dung-secondary-index","children":[]}]}],"relativePath":"study/thanhlv-study-2025/2025-05-27-Secondary-indexing.md","filePath":"study/thanhlv-study-2025/2025-05-27-Secondary-indexing.md","lastUpdated":1750175461000}');const t=i({name:"study/thanhlv-study-2025/2025-05-27-Secondary-indexing.md"},[["render",function(i,e,t,h,l,d){return a(),n("div",null,e[0]||(e[0]=[s('<nav class="table-of-contents"><ul><li><a href="#_1-secondary-index-la-gi">1. Secondary Index là gì ?</a><ul><li><a href="#_1-1-vi-du-ve-secondary-index-trong-cassandra">1.1 Ví dụ về Secondary Index trong Cassandra:</a><ul><li><a href="#luu-y">Lưu ý:</a></li></ul></li><li><a href="#_1-2-cach-secondary-index-hoat-đong-tim-kiem-du-lieu-va-ly-do-lam-giam-hieu-suat">1.2 Cách Secondary Index hoạt động, tìm kiếm dữ liệu và lý do làm giảm hiệu suất</a><ul><li><a href="#_1-2-1-cach-secondary-index-hoat-đong-trong-cassandra">1.2.1. Cách Secondary Index hoạt động trong Cassandra</a></li><li><a href="#_1-2-2-vi-sao-secondary-index-trong-cassandra-lam-giam-hieu-suat">1.2.2 Vì sao Secondary Index trong Cassandra làm giảm hiệu suất?</a><ul><li><a href="#nhung-ly-do-chinh-khien-hieu-suat-giam-bao-gom">Những lý do chính khiến hiệu suất giảm bao gồm:</a></li><li><a href="#minh-hoa-chi-tiet-ve-van-đe-hieu-suat">Minh họa chi tiết về vấn đề hiệu suất .</a></li></ul></li></ul></li><li><a href="#_1-3-khi-nao-nen-dung-secondary-index">1.3 Khi nào nên dùng Secondary Index?</a></li><li><a href="#khi-nao-khong-nen-su-dung-secondary-index">Khi nào không nên sử dụng Secondary Index?</a></li></ul></li></ul></nav><h2 id="_1-secondary-index-la-gi" tabindex="-1">1. Secondary Index là gì ? <a class="header-anchor" href="#_1-secondary-index-la-gi" aria-label="Permalink to &quot;1. Secondary Index là gì ?&quot;">​</a></h2><p>Secondary Index sẽ cho phép chúng ta truy vấn dữ liệu không phải là một thành phần trong khóa chính (primary key)</p><p>Tuy nhiên do kiến chúc phân tán của db Casandra nên các truy vấn secondary index không được tối ưu khi truy vấn trên tệp dữ liệu lớn, truy vấn thường xuyên .</p><p>Hiểu đơn giản Secondary là INDEX trong mysql. Tuy nhiên vì cơ chế phân tán của Cassandra, nên nếu chỉ dùng Index mà không dùng Partition Key, Clustering Key thì ảnh hưởng hiệu suất rất nhiều.</p><p><strong>Nên sử dụng khi:</strong></p><ul><li>Truy vấn không xảy ra quá thường xuyên hoặc không tạo ra tải ghi/đọc quá nặng.</li><li>Cardinality cao: Dữ liệu trong Secondary Index đa dạng dữ liệu, chứa ít dữ liệu lặp lại. <ul><li>Ví dụ: Cột email sẽ là một cardinality cao vì nó sẽ có rất nhiều data khác nhau. Còn age hoặc sex thì chỉ có trong khoảng từ 1 đến 200 cho age hoặc sex thì có nam và nữa và giới tính thứ 3.</li></ul></li></ul><p><strong>Cần cân nhắc:</strong></p><p>Với khối lượng dữ liệu lớn hoặc cột có giá trị ít đa dạng, việc sử dụng secondary index có thể gây ra tình trạng hiệu năng giảm sút. Trong những trường hợp này, việc thiết kế lại mô hình dữ liệu theo hướng denormalization hay sử dụng materialized views sẽ hiệu quả hơn.</p><h3 id="_1-1-vi-du-ve-secondary-index-trong-cassandra" tabindex="-1">1.1 Ví dụ về Secondary Index trong Cassandra: <a class="header-anchor" href="#_1-1-vi-du-ve-secondary-index-trong-cassandra" aria-label="Permalink to &quot;1.1 Ví dụ về Secondary Index trong Cassandra:&quot;">​</a></h3><p>Cho ví dụ với table như sau</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> users</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  user_id UUID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    TEXT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  email   </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TEXT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  age     </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INT</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Trong ví dụ này, <strong>user_id</strong> là khóa chính của bảng. Nếu bạn muốn tìm kiếm người dùng theo <strong>email</strong> mà không phải qua <strong>user_id</strong>, bạn có thể tạo một Secondary Index trên cột <strong>email</strong>:</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INDEX</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> email_index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> users (email);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Sau khi tạo Secondary Index, bạn có thể thực hiện các truy vấn như sau:</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> users</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> email </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;user@example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Cassandra sẽ sử dụng Secondary Index để nhanh chóng tìm kiếm người dùng có email đó, thay vì phải quét toàn bộ bảng.</p><p>Vì thực tế địa chỉ email rất ít khi lặp lại, nên việc sử dụng Secondary Index trên cột email sẽ mang lại hiệu suất tốt.</p><h4 id="luu-y" tabindex="-1">Lưu ý: <a class="header-anchor" href="#luu-y" aria-label="Permalink to &quot;Lưu ý:&quot;">​</a></h4><p>Secondary Index có thể làm giảm hiệu suất khi dữ liệu lớn hoặc khi có nhiều ghi/chỉnh sửa trên các cột có chỉ mục. Vì vậy, bạn cần đánh giá kỹ lưỡng khi sử dụng Secondary Index trong các ứng dụng có yêu cầu về hiệu suất cao.</p><h3 id="_1-2-cach-secondary-index-hoat-đong-tim-kiem-du-lieu-va-ly-do-lam-giam-hieu-suat" tabindex="-1">1.2 Cách Secondary Index hoạt động, tìm kiếm dữ liệu và lý do làm giảm hiệu suất <a class="header-anchor" href="#_1-2-cach-secondary-index-hoat-đong-tim-kiem-du-lieu-va-ly-do-lam-giam-hieu-suat" aria-label="Permalink to &quot;1.2 Cách Secondary Index hoạt động, tìm kiếm dữ liệu và lý do làm giảm hiệu suất&quot;">​</a></h3><h4 id="_1-2-1-cach-secondary-index-hoat-đong-trong-cassandra" tabindex="-1">1.2.1. Cách Secondary Index hoạt động trong Cassandra <a class="header-anchor" href="#_1-2-1-cach-secondary-index-hoat-đong-trong-cassandra" aria-label="Permalink to &quot;1.2.1. Cách Secondary Index hoạt động trong Cassandra&quot;">​</a></h4><p>Khi bạn tạo một Secondary Index trên một cột, Cassandra sẽ tạo một bảng ẩn chứa ánh xạ từ giá trị của cột đó → Partition Key gốc của bảng chính. Theo cơ chế index.</p><p>Ví dụ với bảng <code>user</code></p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> users</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  user_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    TEXT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  email   </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TEXT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  age     </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INT</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Thực tế ID trong Cassandra thường là UUID, vì là demo nên tôi đã int</p><p>Nếu tạo một Secondary Index trên cột email:</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INDEX</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> email_index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> users (email);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Cassandra sẽ tạo một bảng ẩn chứa index ẩn có dạng:</p><table tabindex="0"><thead><tr><th>email</th><th>user_id(Partition key)</th></tr></thead><tbody><tr><td><a href="mailto:example1@thanhlv.com" target="_blank" rel="noreferrer">example1@thanhlv.com</a></td><td>1</td></tr><tr><td><a href="mailto:example2@thanhlv.com" target="_blank" rel="noreferrer">example2@thanhlv.com</a></td><td>2</td></tr><tr><td><a href="mailto:example3@thanhlv.com" target="_blank" rel="noreferrer">example3@thanhlv.com</a></td><td>3</td></tr></tbody></table><p>Khi truy vấn: <code>SELECT * FROM users WHERE email = &#39;example1@thanhlv.com&#39;;</code></p><ol><li>Cassandra tìm giá trị <code>example1@thanhlv.com</code> trong bảng index.</li><li>Tìm thấy <code>example1@thanhlv.com</code> có partition key user_id = 1.</li><li>Truy vấn vào bảng <code>users</code> bằng <code>user_id = 1</code> để lấy dữ liệu đầy đủ.</li></ol><h4 id="_1-2-2-vi-sao-secondary-index-trong-cassandra-lam-giam-hieu-suat" tabindex="-1">1.2.2 Vì sao Secondary Index trong Cassandra làm giảm hiệu suất? <a class="header-anchor" href="#_1-2-2-vi-sao-secondary-index-trong-cassandra-lam-giam-hieu-suat" aria-label="Permalink to &quot;1.2.2 Vì sao Secondary Index trong Cassandra làm giảm hiệu suất?&quot;">​</a></h4><p>Trong cassandra khi sử dụng Secondary Index sẽ gây ra vấn đề scatter-gather&quot; (phân tán-thu thập dữ liệu).</p><p>Secondary Index trong Cassandra được triển khai local của Node. Điều này là nghĩa là mỗi node chỉ lưu trữ Index cho dữ liệu mà nó lưu trữ. Khi bạn tạo một Secondary Index, Cassandra sẽ tạo một bảng ẩn (hidden table) trên mỗi node. Bảng này ánh xạ giá trị của cột được đánh chỉ mục tới Primary Key của (các) hàng chứa giá trị đó trên chính node đó.</p><h5 id="nhung-ly-do-chinh-khien-hieu-suat-giam-bao-gom" tabindex="-1">Những lý do chính khiến hiệu suất giảm bao gồm: <a class="header-anchor" href="#nhung-ly-do-chinh-khien-hieu-suat-giam-bao-gom" aria-label="Permalink to &quot;Những lý do chính khiến hiệu suất giảm bao gồm:&quot;">​</a></h5><ol><li><strong>Query phân tán(Scatter-Gather)):</strong><ul><li>Khi thực hiện một query sử dụng Secondary Index mà không chỉ định partition key, query đó phải được gửi đến tất cả các Node trong cluster để tìm kiếm trong Index local trong các Node.</li><li>Sau đó, node điều phối(coordinator node) sẽ thực hiện thu thập kết quả ở tất cả các node và trả về cho client. Quá trình này làm tăng đáng kế độ trễ.</li><li>Nếu giá trị tìm kiếm bằng <code>Secondary Index</code> bị trùng lặp nhiều, việc này sẽ làm tăng số lượng dữ liệu cần quét và trả về trên mỗi node sau khi đã tìm kiếm xong trong Index local, dẫn đến hiệu suất giảm.</li></ul></li></ol><img src="https://www.plantuml.com/plantuml/svg/jLTRRnj557xVNt7Q83L1TPoi6qYYO2Lnx83gfY498AIyZ6Sdtf5tPxUpixa8yL0XX13YeQeGGWY9KkM1IoKgUCe-yE2A_x7_X3CpwsPzImiAZXHxvvppVUTyS-QClPue8bKQ1ixwoqytF7R41OFt6lTtFjXhWwzKdAnMgvASp7UvyjDEcZ198w6OKFCq2gigZOadQzKu8493L3XQAqVeKKbYoHLBgY5959DLiqPEM1A5hBBatE221gd7KXaCwAeUKQH34ZOVcsGcU23xCPFJxHvBUYgAhm8WalhMxYGzBc8YIGWTGdjT6QN2QqH1966crTH_9G-V2Ey42yBAuOW42IlPK3MI1kg0dQgDW7T5YEe0nNzCbhmIzY1bWh8DAQEJ0v_Jdc190cx9nMH08ocOXCM52R7mYGFuCX15fcwZrbnQCCjjViJQk7-RaVIOBEorEolBMvl3zj5gDrQs6bijuxEBhS0fZt4xXs3SbUM5pPKnbr6a4bl9hOLxFn3Ml6mLL4Lo6earNW5l7CQ1FtKSeYrmS-sDeXlgXw8HSDoEcq0Ii1-T-38xxMeRItj6c10NH4FiH1wpCPUBeu63diLGxGwBXsAs7L62BISyTZfduhLbyLMHxhH8zrMHjMcHDSSHaM8GOMr5uRUj0MRQlEkhZraGH2Uevrgd_dxAv1d4Vlyd0Qh_HC3iFYNOxxAoJPJFv1me6OakD4YIu66G1FOP7dQFO9JXNQjswWXrr-UGvDapyFBi7Fr7l23i_mWzl_ydcgYVPr_2YqTvzfNmmLIfU2IWnyuS9ZpGoJkEJHmgzV8-hEgK5-Sr9smZ6uS79l_ZFFkUZt8UYZLUts-scuq3U1DQU_VlWHva2NpqRdEl2ImaF81tu9PUN6Ud98m3fiVRhRKghvk6uiS4TIptWH5MQX4XEYfRO6QN16nRCYQiiAxDycvHS_-FuKeBMKtw623wlmZSXVpYAOUkAGprkVWBzoI_ECUnWWR4U49H78-LLIfbKAdNRSyPbMh49d3G_os47aUmiE0iDSt4UDV6T_vhVCt6qzU9lrJPdfQXHtVuST3NB-Kt8KLFRmOfiyBVAHTk6Jie7xxPJimlVjPRPBSVsmilh53tZDwKaCGn5zsImEECxZXZv_zbh8qpqkjaj3fMojspL8YuW_kMuc3GDDYTvsUtaIxL1-xYN1oAWfJw_MTubF7fEJwLo1mhMANSM4kTwuEk3Q1jpotHwu4UAA8xUdJwl3LeBwdF90wUXz13EeL7MI_C2iEDvtrkKFn4bCw_GgbDGQ6lZU9uREIeZIouemkrqUaoHlzsmPvdtw20EDMVnaFyAiz-dJp0Xf4rj9ds1dNvoffKYMoegFAKddx_jLeR-BA7w4FT3UOUUWW-pxClKaXIdUrgSQTLOBSyaUrLKynbZ9zKcKdT7aZy5gg_0XkSUtdsBJSEWo6FVPazfvRNeBdG-VjtlCQeoUXhgf5MYnusUDoSR9bdZtdX0aEDR8ZAkXPCYArlt1_iiz3IFUOspwdxew4mxk35PmYloRx39FBiSnFMirVz8mXqmZe1KvWopW5UP9UZPHq_cHyRzlqV" alt="uml diagram"><ol start="2"><li><strong>Tăng Tải Ghi (Write Amplification)</strong><ul><li>Mỗi khi ghi(Insert) ,Cập nhật(Update )hoặc xóa(Delete) dữ liệu trong bảng chính, Cassandra cũng phải cập nhật bảng Index tương ứng. Điều này làm tăng tải ghi trên hệ thống, đặc biệt là khi có nhiều ghi/chỉnh sửa trên các cột có Index.</li><li>Điều này làm tăng gấp đôi (hoặc hơn) số lượng thao tác ghi cho mỗi lần thay đổi dữ liệu.</li></ul></li></ol><img src="https://www.plantuml.com/plantuml/svg/bLVTQXj75BxVfpX92fR0iXmxIMDZZ6t53YwAOs8bRS5GHhiZxU3TcStkh9rGUX52oKKfD5SbTp6Xb8IQfYHGq59o8TFts3VfcPbTQNUboAuCqloSds_E-SwPyKOaIIXZtxCsHgCh3kqnJc6tTN_luOCsk586qMgp6PAJXJwJRjoD8nhQWalAvO8j_AQC0-A4oyt08roPQ33SRVHGeX458PCqQleaaZHiwZLoGYFXqyPDwmhZjXSxD0wzt5tJ8P9qIKGN0WrcYWHwFwRXv_ST6Xr94SmmG8vdc0yeDvjMTCHuG4BYGvVOH_rGnDnf2K-4S6rdM_qL95p2dHCyAmO5UiIBQ64F0qfYJtRe4xdfiJxtCN1WunSD2r8HVHnJRjFDC1Gd7PVPHvn64ImLH3G2MuISXd1zSOekV6y1VhI93EbIQtdxvg9URhCURMDgjqJeq33RNxwnSllELdc_UjhDbJkjEpjQPXzPmcmMOAPBPfPMRYzkhKo8L2qLl1N4Tf0MUM3rnvp2bYByd1EpESEy5fWq_8Db4RK3LzU-o8YoViXR7iDqN0KIWHbQmHYT4ZMSKv820J5Eb8azuL2ZCrwiAkPqHbKbViXh-o7pIVWKEgJhqRhMpvRqoiK63YYMbwDCx7A7FZ4cHejwRG8-Cbw3ztqceItw6MmrnLbL74i0fUzHNof4MZQVp81tSD0PYMTZo-92KX0Okoomy_aMN6kplYk_fPudJZ1ZQztrplbpteTEEdZ3uAxBeFQrQXwmwGSUwp6RI2Pu7MGeKAf5eWXBBYHG2STQixkEvkunxeAR9ZyJU1mFJr5h-0UkzD6iaoP_WiVIv4KCHpYtXn-gHYpA7L3GBSl0XiPwCSkh2kxr1UKBxgR96OEdmtSnsEdWzrZvQEBeB03kueyiEZpaQsnzT-zW-q47TlSwzq7rqWXgwkSxvim3zGdpve4JdzRXqMRxuVO1rEQkBotFpSESajgWJmW6XAhEgzQ-4YwVgwyrsRfcDZic6B8Y8OkCnLCKkQQFiMIEqNBZfsdod8DawU1JK3aGdB_4LOunSIZO6DUt13GJL4uAZajCjeep4y6CSDhnCia2YEQFXwy5ZEc9B3__1Nc0dHU_1SZX6IQlcoRFE1nZD7c_NZniJkFH21eJ9_rcU6gRX73BeLEK9z3cb3TWknMm-Iv2tKACI4dRLIWBm4Oramyk3skaQWeeLAK2ebTIXclxnADtGqgvgPyR1kA-EpoLu2g-SSnWyafEepZKDDNggDh2B2l90cMxvaX6CXsyvOMAgCQft7fqj6vcd2gQhFZ7k6a0oaB6Vl194B1IRYjjpIhF9pbrgy0fwGxV-LEOrN955Smbs5GzvSLyciHQOjIj6OnI42TIS26pBWbnpAqgmbdiBFF3fADWj9geMRJLZN_BYwcXxPSc3bZmoKzOvKTfyc5-11AYTF0FTfz_twV96njwNXovg8QvVOso-Ls2tVqTHwbpR4ir6uE7ODza4KHfKvagojEYEeFP1-CsUJjZrev2C8RNBTR-8I_ZAl0uMyW1NxeHZ2xIIJQLq7LdeSiAxl-0koINHl3AePjoMwuOW4L6kGBnvAd4IwPek7oHbEumPLnVokOMNZI6Ew5AELuEpv11WqyIhtsra5ctXn-H2QKw7T-GinufEpkR-354VPGEVbCiKpwcF4rMiwT70-wboQ-g_n1rS-5v9ru4WQiVEH8lqh_il5MZ1tFJ3ZyoPMhLj8KImwPpM3irhwV-y1IbU3huM-i8PNNS_NIaQihB4dYgwzSlKCsPP1IzVz_7gAdzgqCLjQCqUGcUBbESeMeMGbFRUVtAT70g82G5HQb3eVnXD5xecBp4vVnbXfQu2j2p-3CllGQqXwzzzIWPdFdbeEjeIUr5PUqLzeaq-N5Sy1iuql_ycj__0000" alt="uml diagram"><ol start="3"><li><strong>Tăng Tải Đọc (Read Amplification):</strong><ul><li>Ngay khi truy vấn được gửi đến một node, việc đọc từ Secondary Index yêu cầu hai bước: đầu tiên là tìm kiếm trong bảng chỉ mục để lấy Primary Key, sau đó dùng Primary Key đó để đọc dữ liệu từ bảng chính.</li><li>Nếu một giá trị chỉ mục xuất hiện ở nhiều Record hoặc trên nhiều node, điều này có thể dẫn đến nhiều lần đọc riêng lẻ và giảm hiệu suất.</li></ul></li></ol><img src="https://www.plantuml.com/plantuml/svg/lLTDR-D46BxxLxnqaRP5cuGuBGjLgTfcqmMfMw1TmQKIcemdzYZss3iUzmF4OSM10qAY1yI12qkrMWbs1OWJzO53Alw7_mdlZ9t4SPDqnNQRIetzVZplrpFlj1kn8b8bWMzjZ9xUu8BwYSF0KogALniDIOxgBbTUqarY9cae51EgJiEWePA8EBBLY7mYj6-DexRMGujQ74ckMDm8IAoOR1WPEM9n6B3QIiCXYdH9pEhHJKMC6P7Kkybuyf39cukdWV9eLjpd8YAI1D0bjE_AC15EE_H32RUsE_gdPE4HuHmXBYO0FUB7hAIBsQE42ShWImlmiobbU5JWsErMP-NjN4nLABT2wJ1vMRd3Uso72tQblfhevdltslUsZOtvzJ6IarCUOLTcOPLDgd2ThNTNbY-PRMCBXuqndsa6-_mB1isxqrIx962my2cJ3X5aOPnitf8vEHY3wT57gdBSaR0IyIlB8be52sjlQWAi7uYspv5B2q1Yo1-jQ9oqjik9gIr3R2GNHFllXWxBVSR2cOxQ69h6N3ysvnlQ8qDxlc5hPDYoB14g1Y5gYohkv0gujSDTJstv2SF6h7NNznXnO3E8VDxZb2WU2b0o52xiCpmu3f4dyA5ms37GB7r6e4tY61aloLgZkuu83xZmmClIxmWyIWPFq7Vm72Nguck4KDdv6OUBKrHJw7iSuYnz0KwMFhsCRp7XW4xQilA4eRPURkQgJhPPrs7XauIXss6M_iIhC0TYSR-pqsa_XBTWU--Z1w2d6iDd7tJsEi02mlttRslH1ZicM3JJE-Fsac41FoJOilByoWF6RCoiJ1vsdiTzB8TZtJeRhFBy7w5BVggmL-TdG0TFA5Rai6auzZNXjFuFphZQd7uJh_Rawv1AKjC6mbxkea_S9dvcSMXrI8yi_P6Re11vXWqAoV8d1OzdwJS2REZ--mVEaHOiMKMVPXqU3fu7qsc8UhiE5zyRIY6JVWTV8oLOQFeRT344-b1ly49u9KRbEK-Ci9Mtp4JgS-pLZ83WXvJuI2j37es1jqY0wi_xx6J98DkJGxr6vDRacAy9ULexbdFebshiWIYVun8qA9tPnQaUwHcTrflN5QRIgDSHPjYrAMjffPYBrCSCrz9ZwEDm59v4BLWK-9BWyVjhH9TNncYz8eRbiCeEg0ZigW3tG6NzLAE_KqJFqX-maNZCpwA9-ARrfIKq0QVnpDetK7Vd5aAJB3tb2FMtS2SgAU_kAox0-v8naM-lNJSv6VmgG7Y3NmJCtcMubwvUPtvs_amCbzdmwkFcK1uEVXuA9lUKMMdvdLQW3aa7hjdeStOvBCQO9VuvkuGmhJhicXcxt5p5MVfj4ViuCRv5ca9_FqxoPE_eM_aKV1CHaofIl7nGYalTnrvXhELwkTtZn164crBLN1vChyKbojEbZ3Vt1ZwQ_wxox_y0" alt="uml diagram"><ol start="4"><li><strong>Vấn Đề với Cardinality:</strong><ul><li>High Cardinality (Độ đa dạng cao): Nếu Column sử dụng để đánh Secondary Index có nhiều giá trị duy nhất(Ví dụ: Email, user_id, ...) bảng Index ẩn có thể sẽ rất lớn, làm tăng dung lượng lưu trữ. <ul><li>Mặc dù vẫn gửi request đến tất cả các node, nhưng việc tìm kiếm trong Index sẽ nhanh hơn so với việc quét toàn bộ bảng chính. Bởi vì nếu tại bước đầu tiên không tìm thấy giá trị trong Index thì sẽ không thực hiện lấy dữ liệu từ bảng chính trong node đó.</li></ul></li><li>Low Cardinality (Độ đa dạng thấp): Nếu column có ít giá trị duy nhất (ví dụ: giới tính, trạng thái), bảng Index sẽ chứa nhiều bản ghi trùng lặp. Điều này dẫn đến việc quét hàng triệu bản ghi trên bảng chính để tìm kiếm các bản ghi phù hợp với Index, làm giảm hiệu suất.</li></ul></li></ol><img src="https://www.plantuml.com/plantuml/svg/lLTTQnj757tNhxXr2qv99DcINOXnZHt5mG77bCIqBu4okplQdNftLfsTjMoQF8GyX592cwTIGg71b1BQa42VAb7w8EF_iV-aTsPMqkokrfHGR6DfsJddVfqxSyVRYIH2fb7Os9uzVS2u6wOUXK3AGRBHRWioRFbC1gcJ9bIuCPUKovORHssP3eWdkkr1IBZYDXckDlk8Q2O3mIHDsX5991Lj_OuCQH97jBdUzeWa3abeQt1L7j5VU8Nk4ag46robFt5CXV7NI8uO7n118d28U-IBEELUBmvZ0H_UsLM_5iAZVPA6yf2Uo9sG-Jp2KC353oeib3RXne9J0PqLQo49Y1SF6VUXJyA4shvvB2byqm2uLGa2VtezjH8BZuhyxKtzqtZSQ2p3-G_P-3iU0FU3yzS4eialAIJPwArhsTyH8Xxct4wlkxjknoMeAmdtmve8TcxUxjs-KuuWju8HI2QHkkbiVPwDVkLm_Y8RFu4U4HxZ96Jo58wpyKi63oZAun5n2dUvHqz0YXWhqID9GhWdo6RRsMeqvg4iRNvaTDfwo6SWE8WzkWGaqGywt093DouIRcMZCsKycBp1mbnJdPDyh7dt2EE72gN91Rf2VSayU0Gq8Yp4RvzYf08VSB_BDD46zYZ1TsNkoiegmhwA0xvDJqWqmEs3BOgl8eBBZu2uaXsRoE_7mzKglQFeXDCIlKyN6kXK3NGHvCJEOlUeH87VhVBNb9EGkVynWhMoXLQhXQ3IvnHzWEZ7-5VIozdQOtvGw1NT6weN7lAvdENMkQO5Ce8g2yg0MQc8EfKo5zUIK17Bw0K2ehBJB1IZ8jq2qL1Dcr8HgoeJocSpAl8i4WObipdrWjYeMY7su-5xw60sY142BLoYmsmhLOL0OXcTjvnL-_q5ksQ6wbgeIhLpb5M8_GKRODRcbdZx2zhSmgrPkFLQND7l9_zl_SsvPEh_G3_NbDy05vRVy2eTftTxKGE3hCXWGJj5Q4KB2xfMX5PRVWgr2cYW5Kscfrkn5mou8em5hbWswk18q-Cuf7q9SRzumY02rLfjGVdaqlCBe0a70SC1c8BF9gzmoE5i1Yyz1HxWT9JJeqiZxsNZ7vcDSuDi_2sSf1gfp3pZi0fXDlgDQu8HDyHnoj7UnJiSSNBoHmH7B1lz4nb62byZ_qpZ9yybE6eKWXymS9KTFPwVko2pyUzcpKUtQamsS8VgUqYUli04TVxsnZRfTrfGwjTPzifbJURvOR4uzMBIFA_XFFLfLTyx7IUM4izDpCVQA2QTRYMTsSwQvVLPeDtbjVSltcNZdnbuax-KmycV-GtXqxnjbpJdKAJgygCkHL_ixTxVdOAM3MXPtTB-tj0DUXt16BswAZs1WUtB99M3zep2YIaM9lrCzm7qqp04VKf0uX9UdxkwDfcaxSkQkQ1P-M_aUHjekTMdgzVXucsA9Z2efz467DQquWsOlAdhmrnRLSupTsuglx-nUR_VKDc-KEKO_wGwQlno5bv9kvhe2YQLWUzhVDjf74rUbtFXbpPYZSqUTeX4dq-DPi75Atw9PjlugF_DDD__0W00" alt="uml diagram"><h5 id="minh-hoa-chi-tiet-ve-van-đe-hieu-suat" tabindex="-1">Minh họa chi tiết về vấn đề hiệu suất . <a class="header-anchor" href="#minh-hoa-chi-tiet-ve-van-đe-hieu-suat" aria-label="Permalink to &quot;Minh họa chi tiết về vấn đề hiệu suất .&quot;">​</a></h5><p>Giả sử chúng ta có một bảng users để lưu thông tin người dùng, và chúng ta muốn tìm kiếm người dùng theo thành phố.</p><details class="details custom-block"><summary>Chi tiết</summary><h3 id="_1-tao-bang" tabindex="-1">1. Tạo Bảng: <a class="header-anchor" href="#_1-tao-bang" aria-label="Permalink to &quot;1. Tạo Bảng:&quot;">​</a></h3><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KEYSPACE my_keyspace </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WITH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> replication </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &#39;class&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SimpleStrategy&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;replication_factor&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       };</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">USE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> my_keyspace;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> users</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    user_id uuid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    email </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    city </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">text</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>Trong bảng này, <code>user_id</code> là <code>Partition Key</code>. Chúng ta chỉ có thể truy vấn hiệu quả theo <code>user_id</code>. Nếu muốn tìm theo <code>city</code>, chúng ta cần <code>Secondary Index</code>.</p><h3 id="_2-tao-secondary-index" tabindex="-1">2. Tạo Secondary Index: <a class="header-anchor" href="#_2-tao-secondary-index" aria-label="Permalink to &quot;2. Tạo Secondary Index:&quot;">​</a></h3><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INDEX</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> idx_city</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> users (city);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>Cassandra</code> sẽ tự động tạo một bảng index ẩn trên mỗi node. Bảng này sẽ có cấu trúc tương tự như: idx_city (city_value, user_id).</p><h3 id="_3-them-du-lieu" tabindex="-1">3. Thêm Dữ Liệu: <a class="header-anchor" href="#_3-them-du-lieu" aria-label="Permalink to &quot;3. Thêm Dữ Liệu:&quot;">​</a></h3><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> users (user_id, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, email, city) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (uuid(), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Thành&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;alice@example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hanoi&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> users (user_id, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, email, city) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (uuid(), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Tuấn&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;bob@example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;HCM&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> users (user_id, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, email, city) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (uuid(), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Nam&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;charlie@example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hanoi&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>Khi ghi <code>Thành</code>, Node chịu trách nhiệm sẽ ghi hàng vào <code>users</code> và ghi (<code>Hanoi</code>, <code>Thành_user_id</code>) vào <code>idx_city</code>.</li><li>Khi ghi <code>Tuấn</code>, Node chịu trách nhiệm sẽ ghi hàng vào <code>users</code> và ghi (<code>HCM</code>, <code>Tuấn_user_id</code>) vào <code>idx_city</code>.</li><li>Khi ghi <code>Nam</code>, Node chịu trách nhiệm sẽ ghi hàng vào <code>users</code> và ghi (<code>Hanoi</code>, <code>Nam_user_id</code>) vào <code>idx_city</code>.</li></ul><p>Lưu ý rằng <code>Thành</code> và <code>Nam</code> có thể nằm trên các node khác nhau, vì partition key token khác nhau, và mỗi node đó sẽ có mục nhập <code>Hanoi</code> trong index local của nó.</p><h3 id="_4-tim-kiem-du-lieu" tabindex="-1">4. Tìm Kiếm Dữ Liệu: <a class="header-anchor" href="#_4-tim-kiem-du-lieu" aria-label="Permalink to &quot;4. Tìm Kiếm Dữ Liệu:&quot;">​</a></h3><p>Bây giờ, chúng ta muốn tìm tất cả người dùng ở <code>Hanoi</code>:</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> users </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> city </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Hanoi&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Đây là cách Cassandra xử lý (giả sử có 3 nút <code>N1</code>, <code>N2</code>, <code>N3</code> và <code>Thành</code> ở N1, <code>Nam</code> ở N3):</p><ol><li>Node điều phối nhận the query(Có thể là 1 trong các node Cassandra, giả sử là <code>N1</code>).</li><li>Bởi vì <code>city</code> là một Secondary Index, vì vậy <code>N1</code> sẽ gửi query đến cả <code>N2</code> và <code>N3</code> để tìm kiếm trong index local của chúng.(Tìm kiếm dữ liệu trên cả 2 Node)</li><li><code>N1</code>: Tìm <code>Hanoi</code> trong <code>idx_city</code> local, thấy <code>Thành_user_id</code>. Đọc Record của <code>Thành</code> từ users.</li><li><code>N2</code>: Tìm <code>Hanoi</code> trong <code>idx_city</code> local, không thấy. Gửi về kết quả rỗng.</li><li><code>N3</code>: Tìm <code>Hanoi</code> trong <code>idx_city</code> local, thấy <code>Nam_user_id</code>. Đọc Record của <code>Nam</code> từ users và gửi về.</li><li><code>N1</code> thu thập kết quả từ <code>N2</code> và <code>N3</code>, trả về cho client.(<code>Thành</code>, <code>Nam</code>)</li></ol><p>Như bạn thấy, dù chỉ có hai kết quả, truy vấn đã phải <code>hỏi</code> cả ba Node, gây ra hiện tượng <code>scatter-gather</code> và làm giảm hiệu suất so với việc truy vấn theo <code>user_id</code>.</p></details><h3 id="_1-3-khi-nao-nen-dung-secondary-index" tabindex="-1">1.3 Khi nào nên dùng Secondary Index? <a class="header-anchor" href="#_1-3-khi-nao-nen-dung-secondary-index" aria-label="Permalink to &quot;1.3 Khi nào nên dùng Secondary Index?&quot;">​</a></h3><ol><li>Khi thực sự cần truy vấn theo column không phải là partition key và chấp nhận độ trễ cao hơn.</li><li>Khi truy vấn kết hợp với Partition Key, giúp giới hạn số lượng nút cần quét.</li><li>Khi column có độ đa dạng (cardinality) không quá cao cũng không quá thấp (khó xác định).</li></ol><h3 id="khi-nao-khong-nen-su-dung-secondary-index" tabindex="-1">Khi nào không nên sử dụng Secondary Index? <a class="header-anchor" href="#khi-nao-khong-nen-su-dung-secondary-index" aria-label="Permalink to &quot;Khi nào không nên sử dụng Secondary Index?&quot;">​</a></h3><ol><li>Không nên sử dụng Secondary Index khi có thể sử dụng Partition Key để truy vấn.</li><li>Không nên sử dụng Secondary Index nếu không kèm theo Partition Key, vì sẽ làm giảm hiệu suất. 2.1 Nếu có kèm theo Partition Key, thì hiệu suất sẽ tốt hơn. Dữ liệu chỉ cần tìm trên 1 node.</li><li>Không nên sử dụng Secondary Index trên các cột có độ đa dạng (cardinality) quá thấp, vì sẽ làm tăng số lượng bản ghi cần quét.</li></ol>',51)]))}]]);export{e as __pageData,t as default};
