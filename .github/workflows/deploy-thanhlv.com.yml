name: CI
permissions:
  contents: write
on:
  push:
    branches:
      - custom-deploy

concurrency:
  group: build-and-deploy-live
  cancel-in-progress: true  # Há»§y job Ä‘ang cháº¡y cÃ¹ng group

run-name: Build live

jobs:
  build:
    runs-on: ubuntu-latest
    environment: prod
    name:  Build live
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.12'

      - name: Install pnpm
        run: npm i -g pnpm

      - name: Check if last commit contains 'no_cache:'
        id: check-commit
        run: |
          if git log -1 --pretty=%B | grep -q 'no_cache:'; then
          echo "SKIP_CACHE=true" >> $GITHUB_ENV
          else
          echo "SKIP_CACHE=false" >> $GITHUB_ENV
          fi

      - name: Cache Node.js modules
        if: env.SKIP_CACHE == 'false'
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/packages/apps/src/about/author/thanhlv-vi.md') }}
          restore-keys: |
            key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/packages/apps/src/about/author/thanhlv-vi.md') }}

      - name: Install deps
        run: pnpm install
      - name: Build app
        run: npm run build_github
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          publish_branch: gh-pages  # Thay Ä‘á»•i náº¿u cáº§n
      - name: Send Telegram Message
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: -1002300511836
        run: |
          curl -s --data "chat_id=$TELEGRAM_CHAT_ID&text=ðŸš€ Build and push to branch gh-pages completed successfully!" \
          "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage"